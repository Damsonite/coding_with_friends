name: Recently Closed Issues Summary

on:
  # Ejecutar cada lunes a las 9:00 AM UTC
  schedule:
    - cron: "0 9 * * 1"

  # Ejecutar cuando un issue se cierre
  issues:
    types: [closed]

  # Permitir ejecuci√≥n manual
  workflow_dispatch:

jobs:
  update-summary:
    runs-on: ubuntu-latest
    permissions:
      contents: write # para actualizar el archivo
      issues: read # para leer los issues
      pull-requests: read # filtrar correctamente

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # necesario para commits autom√°ticos confiables

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Generate Issues Report
        id: generate
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            const { owner, repo } = context.repo;

            // Buscar los 5 issues cerrados m√°s recientes (excluyendo PRs)
            const { data: issues } = await github.rest.issues.listForRepo({
              owner,
              repo,
              state: "closed",
              per_page: 10, // recuperamos m√°s para filtrar
              sort: "updated",
              direction: "desc",
            });

            const recentIssues = issues
              .filter(issue => !issue.pull_request)
              .slice(0, 8);

            console.log(`‚úÖ Issues filtrados (sin PRs): ${recentIssues.length}`);

            // Formatear en Markdown
            let markdown = `# üß© Issues Cerrados Recientemente\n\n`;
            markdown += `> _√öltima actualizaci√≥n: **${new Date().toLocaleString('es-ES')}**_\n\n---\n\n`;

            if (recentIssues.length === 0) {
              markdown += `No hay issues cerrados recientemente.\n\n`;
              markdown += `> üîç [Ver todos los issues](https://github.com/${context.repo.owner}/${context.repo.repo}/issues)\n`;
            } else {
              markdown += `| # | T√≠tulo | Cerrado el | Labels | Asignado |\n`;
              markdown += `|:-:|:--------|:------------|:--------|:----------|\n`;

              recentIssues.forEach((issue) => {
                const labels = issue.labels.length > 0 
                  ? issue.labels.map(l => `\`${l.name}\``).join(' ') 
                  : '‚Äî';
                const assignee = issue.assignee ? `@${issue.assignee.login}` : '‚Äî';
                const date = new Date(issue.closed_at).toLocaleDateString('es-ES');
                
                // Truncar t√≠tulo si es muy largo
                const title = issue.title.length > 50 
                  ? issue.title.substring(0, 47) + '...' 
                  : issue.title;
                  
                markdown += `| [#${issue.number}](${issue.html_url}) | ${title} | ${date} | ${labels} | ${assignee} |\n`;
              });

              markdown += `\n---\n\n`;
              markdown += `### üìä Estad√≠sticas\n\n`;
              markdown += `- **Total mostrado:** ${recentIssues.length} issues\n`;
              markdown += `- **Per√≠odo:** √öltimos issues cerrados\n`;
              markdown += `- **Actualizaci√≥n:** Autom√°tica (lunes + al cerrar issues)\n\n`;
            }

            markdown += `> üïí Este archivo se actualiza autom√°ticamente cuando se cierran issues.\n`;
            markdown += `> üí¨ [Ver todos los issues](https://github.com/${context.repo.owner}/${context.repo.repo}/issues) | `;
            markdown += `üÜï [Issues abiertos](https://github.com/${context.repo.owner}/${context.repo.repo}/issues?q=is%3Aissue+is%3Aopen)\n`;

            const filePath = path.join(process.cwd(), 'RECENTLY_CLOSED.md');
            fs.writeFileSync(filePath, markdown);

            console.log("‚úÖ Archivo actualizado:", filePath);

      - name: Commit and Push changes
        run: |
          git config user.name "GitHub Action Bot"
          git config user.email "action@github.com"

          if [ ! -f RECENTLY_CLOSED.md ]; then
            echo "‚ö†Ô∏è El archivo RECENTLY_CLOSED.md no existe, abortando commit."
            exit 0
          fi

          git add RECENTLY_CLOSED.md

          if git diff --cached --quiet; then
            echo "‚ÑπÔ∏è No hay cambios detectados. Nada que commitear."
          else
            echo "‚úÖ Commit detectado, enviando cambios..."
            git commit -m "ci: actualizar resumen de issues cerrados recientemente [skip ci]"
            git push
          fi
